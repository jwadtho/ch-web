# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
env:
  REGION_ID: cn-shanghai
  ACR_EE_REGISTRY: xom-ecomm-acr02-registry.cn-shanghai.cr.aliyuncs.com
  ACR_EE_INSTANCE_ID: cri-3fynibeigjxpi5o6
  ACR_EE_NAMESPACE: tootest
  ACR_EE_IMAGE: ch-web

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: GitHub SHA
      run: |
          GITHUB_SHA="$GITHUB_SHA"
          echo "VERSION=$GITHUB_SHA" >> $GITHUB_ENV
          sed -i "s/GITHUB_SHA/$GITHUB_SHA/g" ./kubernetes/deployment.yml
    - name: actions/setup-node
      uses: actions/setup-node@v1.4.1
      with:
        node-version: "13.9.0"
    - name: yarn install
      uses: jaid/action-npm-install@v1.2.1
      with:
        packageManager: yarn
    - name: yarn build
      run: yarn run build
      
    - name: build Docker imgae
      run: docker build -t ch-web:$VERSION .
      
    - name: Login to ACR EE with the AccessKey pair
      uses: aliyun/acr-login@v1
      with:
        login-server: "https://${{ env.ACR_EE_REGISTRY }}"
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ALICLOUD_ACCESS_KEY }}"
        access-key-secret: "${{ secrets.ALICLOUD_SECRET_KEY }}"
        instance-id: "${{ env.ACR_EE_INSTANCE_ID }}"

    - name: Build and push image to ACR EE
      run: |
        docker push "$ACR_EE_REGISTRY/$ACR_EE_NAMESPACE/$ACR_EE_IMAGE:$VERSION"

#     - name: Generate secret from docker config
#       run: |
#         BASE64=$(cat ${{ env.DOCKER_CONFIG }}/config.json | base64 -w 0)
#         sed -i "s/BASE64_CREDENTIAL/$BASE64/g" ./kubernetes/pullImageSecret.yml
    
#     - name: Setting context for Kubernetes cluster of Alibaba Cloud Kubernetes Service (ACK)
#       uses: aliyun/ack-set-context@v1
#       with:
#         access-key-id: ${{ secrets.ALICLOUD_ACCESS_KEY }}
#         access-key-secret: ${{ secrets.ALICLOUD_SECRET_KEY }}
#         cluster-id: ${{ secrets.ASK_CLUSTER_ID }}
        
#     # Prepare k8s yaml files
#     - name: Set variable to yaml files
#       run: |
#         sed -e "s#{NAMESPACE}#tootest#g" kubernetes/pullImageSecret.yml > kubernetes/pullImageSecret.yaml
#         sed -e "s#{NAMESPACE}#tootest#g" kubernetes/deployment.yml > kubernetes/deployment.yaml
#         sed -e "s#{NAMESPACE}#tootest#g" kubernetes/service.yml > kubernetes/service.yaml
#         kubectl apply -R -f kubernetes/namespace.yml -f kubernetes/pullImageSecret.yaml -f kubernetes/deployment.yaml -f kubernetes/service.yaml
      
